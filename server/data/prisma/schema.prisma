generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMDFKWFo4Wjk2OUZGNTVLQVdCM1RGVFZSVEEiLCJ0ZW5hbnRfaWQiOiJmNjE1MWZiY2JiZTg1ODc5N2Q5ZDA3MTdiOGUyOGZiNWNiZTkzMDZjMWJmZTM0Mjg5YWYxYTBmYTgwNTYyMTIyIiwiaW50ZXJuYWxfc2VjcmV0IjoiYWEzMjYxNTItNTY0OC00N2EzLWE0NzItMWI2N2E1M2VhNGI1In0.5ZYS2kwzhZAHFtv3DpSrzNx_c8zxg33PTOrpsrMMyXw"
  //url = env("DATABASE_URL")
}

model LocalizacaoPA {
  id               Int               @id @default(autoincrement())
  filial           String
  andar            String
  espinha          String
  pa               String
  carteira         String
  RelacionamentoPA RelacionamentoPA? 
  HistoricoPA      HistoricoPA[]     
}

model RelacionamentoPA {
  id              Int           @id   
  localizacaoPA   LocalizacaoPA @relation(fields: [id], references: [id]) 
  localCompleto   String        @unique
  dataCriacao     DateTime      @default(now())
  dataModificacao DateTime      @updatedAt
  patrimonioMNT1  String        @default("")
  patrimonioMNT2  String        @default("")
  patrimonioPC    String
  HistoricoPA     HistoricoPA[] 
}

model HistoricoPA {
  id                Int              @id @default(autoincrement())
  localizacaoPAId   Int
  relacionamentoPAId Int
  localizacaoPA     LocalizacaoPA    @relation(fields: [localizacaoPAId], references: [id])
  relacionamentoPA  RelacionamentoPA @relation(fields: [relacionamentoPAId], references: [id])
  status            String          
  dataRegistro      DateTime         @default(now())
}
